{"ast":null,"code":"var _jsxFileName = \"/Users/nikitarybkin/Web/Involta-Practice/chat-react/frontend/src/components/window-chat/window-chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport s from \"./window-chat.module.scss\";\nimport Messenger from \"../messenger\";\nimport socketClient from \"socket.io-client\";\nimport \"./index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER = \"http://localhost:8000\";\nconst socket = socketClient(SERVER);\nlet tracking = document.getElementById(\"tracking\");\n\nconst WindowChat = () => {\n  _s();\n\n  let [userId, setUserId] = useState(null);\n  useEffect(() => {\n    socket.on(\"connected\", socketId => {\n      setUserId(socketId);\n      console.log(\"Socket is running...\");\n    });\n    socket.on(\"disconnect\", () => {\n      console.log(\"Socket is disconnect...\");\n    });\n  }, []);\n  let [message, setMessage] = useState(\"\");\n  let [messages, setMessages] = useState([]);\n  let [typing, setTyping] = useState(\"\");\n  let [time, setTime] = useState();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    socket.emit(\"message\", message);\n    setMessage(\"\");\n  };\n\n  const onKeyPress = e => {\n    if (e) {\n      // console.log(e)\n      console.log(tracking);\n      socket.emit(\"typing\", e.target.value);\n      clearInterval(time);\n      setTime(setTimeout(timeoutFunction, 2000));\n    }\n  };\n\n  const messageFunc = (message, id) => {\n    let time = new Date();\n    const newMessage = {\n      id: Date.now(),\n      time: `${time.getHours()}:${time.getMinutes()}`,\n      body: message,\n      created_at: Date.now(),\n      updated_at: null,\n      sender: id\n    };\n    setMessages(spread => {\n      return [...spread, newMessage];\n    });\n  };\n\n  useEffect(() => {\n    socket.on(\"message\", data => {\n      messageFunc(data.body, data.id); // console.log(data.id);\n    });\n  }, []);\n\n  function timeoutFunction() {\n    socket.emit(\"typing\", false);\n  }\n\n  socket.on(\"typing\", function (data) {\n    // console.log(\"User is typing a message...\");\n    if (data) {\n      setTyping(\"Печатает...\");\n      console.log(typing);\n    } else {\n      setTyping(\"\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.windowChat,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.windowBlock,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"m\",\n        className: s.messages,\n        children: messages.map(item => {\n          return /*#__PURE__*/_jsxDEV(Messenger, {\n            userId: userId,\n            socket: socket,\n            item: item,\n            m: () => document.getElementById(\"m\").lastChild.scrollIntoView(true)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.inputChat,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tracking\",\n        className: s.tracking,\n        children: typing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"form\",\n        onSubmit: onSubmit,\n        className: s.inputChat,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          id: \"messageInput\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n          className: s.inputField,\n          onKeyUp: onKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: s.sendBlock,\n          id: \"btn\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: s.send,\n            src: \"/image/send.svg\",\n            height: \"18\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WindowChat, \"hpQvxo0gPJU+wB50oxBxca8rujA=\");\n\n_c = WindowChat;\nexport default WindowChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"WindowChat\");","map":{"version":3,"sources":["/Users/nikitarybkin/Web/Involta-Practice/chat-react/frontend/src/components/window-chat/window-chat.jsx"],"names":["React","useState","useEffect","s","Messenger","socketClient","SERVER","socket","tracking","document","getElementById","WindowChat","userId","setUserId","on","socketId","console","log","message","setMessage","messages","setMessages","typing","setTyping","time","setTime","onSubmit","e","preventDefault","emit","onKeyPress","target","value","clearInterval","setTimeout","timeoutFunction","messageFunc","id","Date","newMessage","now","getHours","getMinutes","body","created_at","updated_at","sender","spread","data","windowChat","windowBlock","map","item","lastChild","scrollIntoView","inputChat","inputField","sendBlock","send"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport s from \"./window-chat.module.scss\";\nimport Messenger from \"../messenger\";\nimport socketClient from \"socket.io-client\";\nimport \"./index\";\n\nconst SERVER = \"http://localhost:8000\";\nconst socket = socketClient(SERVER);\nlet tracking = document.getElementById(\"tracking\");\n\nconst WindowChat = () => {\n  let [userId, setUserId] = useState(null);\n  useEffect(() => {\n    socket.on(\"connected\", (socketId) => {\n      setUserId(socketId);\n\n      console.log(\"Socket is running...\");\n    });\n    socket.on(\"disconnect\", () => {\n      console.log(\"Socket is disconnect...\");\n    });\n  }, []);\n\n  let [message, setMessage] = useState(\"\");\n  let [messages, setMessages] = useState([]);\n  let [typing, setTyping] = useState(\"\");\n  let [time, setTime] = useState();\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    socket.emit(\"message\", message);\n    setMessage(\"\");\n  };\n\n  const onKeyPress = (e) => {\n    if (e) {\n      // console.log(e)\n      console.log(tracking);\n      socket.emit(\"typing\", e.target.value);\n      clearInterval(time);\n      setTime(setTimeout(timeoutFunction, 2000));\n    }\n  };\n\n  const messageFunc = (message, id) => {\n    let time = new Date();\n    const newMessage = {\n      id: Date.now(),\n      time: `${time.getHours()}:${time.getMinutes()}`,\n      body: message,\n      created_at: Date.now(),\n      updated_at: null,\n      sender: id,\n    };\n    setMessages((spread) => {\n      return [...spread, newMessage];\n    });\n  };\n\n  useEffect(() => {\n    socket.on(\"message\", (data) => {\n      messageFunc(data.body, data.id);\n      // console.log(data.id);\n    });\n  }, []);\n\n  function timeoutFunction() {\n    socket.emit(\"typing\", false);\n  }\n\n  socket.on(\"typing\", function (data) {\n    // console.log(\"User is typing a message...\");\n    if (data) {\n      setTyping(\"Печатает...\");\n      console.log(typing);\n    } else {\n      setTyping(\"\");\n    }\n  });\n\n  return (\n    <div className={s.windowChat}>\n      <div className={s.windowBlock}>\n        <div id=\"m\" className={s.messages}>\n          {messages.map((item) => {\n            return (\n              <Messenger\n                userId={userId}\n                key={item.id}\n                socket={socket}\n                item={item}\n                m={() =>\n                  document.getElementById(\"m\").lastChild.scrollIntoView(true)\n                }\n              />\n            );\n          })}\n        </div>\n      </div>\n      <div className={s.inputChat}>\n        <div id=\"tracking\" className={s.tracking}>\n          {typing}\n        </div>\n        <form id=\"form\" onSubmit={onSubmit} className={s.inputChat}>\n          <input\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            id=\"messageInput\"\n            placeholder=\"Введите сообщение...\"\n            className={s.inputField}\n            onKeyUp={onKeyPress}\n          />\n          <button className={s.sendBlock} id=\"btn\">\n            <img\n              className={s.send}\n              src=\"/image/send.svg\"\n              height=\"18\"\n              alt=\"\"\n            ></img>\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default WindowChat;\n"]},"metadata":{},"sourceType":"module"}